version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: trueconnect
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trueconnect_network

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - trueconnect_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=trueconnect
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=localDevelopmentSecret
      - JWT_EXPIRATION=15m
      - JWT_REFRESH_EXPIRATION=7d
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - trueconnect_network
    # Install dependencies first, then start the app
    command: >
      sh -c "npm install && npm run start:dev"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - trueconnect_network
    # Install dependencies first, then start the app
    command: >
      sh -c "npm install && npm run dev"

networks:
  trueconnect_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
